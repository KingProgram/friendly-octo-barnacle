#include <windows.h>
#include <ctime>
#include <string>

const char CLASS_NAME[] = "GuessGameWindow";

// Function to convert int to string
std::string intToStr(int num) {
    char buf[10];
    wsprintfA(buf, "%d", num);
    return buf;
}

// Simple input box using Windows API
std::string ShowInputBox(const char* prompt, const char* title) {
    char input[100] = "";
    if (DialogBoxParamA(
            GetModuleHandle(nullptr),
            MAKEINTRESOURCE(101), 0, [](HWND hwndDlg, UINT uMsg, WPARAM wParam, LPARAM lParam) -> INT_PTR {
                static char* buffer;
                switch (uMsg) {
                    case WM_INITDIALOG:
                        buffer = (char*)lParam;
                        return TRUE;
                    case WM_COMMAND:
                        if (LOWORD(wParam) == IDOK) {
                            GetDlgItemTextA(hwndDlg, 1001, buffer, 100);
                            EndDialog(hwndDlg, IDOK);
                            return TRUE;
                        }
                        if (LOWORD(wParam) == IDCANCEL) {
                            EndDialog(hwndDlg, IDCANCEL);
                            return TRUE;
                        }
                        break;
                }
                return FALSE;
            },
            (LPARAM)input) == IDOK) {
        return std::string(input);
    }
    return "";
}

// Message loop and window procedure
LRESULT CALLBACK WindowProc(HWND hwnd, UINT uMsg, WPARAM wParam, LPARAM lParam) {
    switch (uMsg) {
        case WM_CREATE: {
            srand((UINT)time(0));
            int number = (rand() % 10) + 1;

            // Show prompt
            std::string guessStr = ShowInputBox("Guess a number (1-10):", "Number Guess Game");

            int guess = atoi(guessStr.c_str());
            std::string result;
            if (guess == number)
                result = "üéâ Correct! You guessed the number!";
            else
                result = "‚ùå Wrong! The number was " + intToStr(number);

            MessageBoxA(hwnd, result.c_str(), "Result", MB_OK | MB_ICONINFORMATION);
            PostQuitMessage(0);
            return 0;
        }
        case WM_DESTROY:
            PostQuitMessage(0);
            return 0;
    }
    return DefWindowProc(hwnd, uMsg, wParam, lParam);
}

int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE, LPSTR, int nCmdShow) {
    WNDCLASS wc = {};
    wc.lpfnWndProc   = WindowProc;
    wc.hInstance     = hInstance;
    wc.lpszClassName = CLASS_NAME;
    wc.hbrBackground = CreateSolidBrush(RGB(240, 240, 240)); // light gray

    RegisterClass(&wc);

    HWND hwnd = CreateWindowEx(
        0, CLASS_NAME, "Random Number Game", WS_OVERLAPPEDWINDOW,
        CW_USEDEFAULT, CW_USEDEFAULT, 400, 300,
        nullptr, nullptr, hInstance, nullptr
    );

    ShowWindow(hwnd, nCmdShow);

    MSG msg = {};
    while (GetMessage(&msg, nullptr, 0, 0)) {
        TranslateMessage(&msg);
        DispatchMessage(&msg);
    }

    return 0;
}
