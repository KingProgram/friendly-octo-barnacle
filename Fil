#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_LINES 100
#define MAX_VARS 50

// Simple variable structure
typedef struct {
    char name[50];
    char value[100];
} Var;

Var vars[MAX_VARS];
int varCount = 0;

char* getVar(const char* name) {
    for (int i = 0; i < varCount; i++) {
        if (strcmp(vars[i].name, name) == 0) {
            return vars[i].value;
        }
    }
    return "";
}

void setVar(const char* name, const char* value) {
    for (int i = 0; i < varCount; i++) {
        if (strcmp(vars[i].name, name) == 0) {
            strcpy(vars[i].value, value);
            return;
        }
    }
    strcpy(vars[varCount].name, name);
    strcpy(vars[varCount].value, value);
    varCount++;
}

void runPCP(const char* filename) {
    FILE* file = fopen(filename, "r");
    if (!file) {
        printf("Error opening file.\n");
        return;
    }

    char line[256];
    while (fgets(line, sizeof(line), file)) {
        // Remove newline
        line[strcspn(line, "\n")] = 0;

        // val
        if (strncmp(line, "val ", 4) == 0) {
            char name[50], value[100];
            sscanf(line, "val %s = \"%[^\"]\"", name, value);
            setVar(name, value);
        }

        // show
        else if (strncmp(line, "show ", 5) == 0) {
            char text[200];
            sscanf(line, "show \"%[^\"]\"", text);
            printf("%s\n", text);
        }

        // view
        else if (strncmp(line, "view ", 5) == 0) {
            char tag[50], content[100];
            sscanf(line, "view \"%[^\"]\", \"%[^\"]\"", tag, content);
            printf("<%s>%s</%s>\n", tag, content, tag);
        }

        // when (simple equality check)
        else if (strncmp(line, "when ", 5) == 0) {
            char var[50], value[100];
            sscanf(line, "when %s == \"%[^\"]\" {", var, value);
            char* actual = getVar(var);
            if (strcmp(actual, value) == 0) {
                // get next line
                fgets(line, sizeof(line), file);
                line[strcspn(line, "\n")] = 0;
                if (strncmp(line, "show ", 5) == 0) {
                    char text[200];
                    sscanf(line, "show \"%[^\"]\"", text);
                    printf("%s\n", text);
                }
                // skip }
                fgets(line, sizeof(line), file);
            } else {
                // skip both next line and closing }
                fgets(line, sizeof(line), file);
                fgets(line, sizeof(line), file);
            }
        }
    }

    fclose(file);
}
